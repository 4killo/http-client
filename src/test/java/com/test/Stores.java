/**
 * Account API
 * Account information for a customer.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package com.test;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * Stores
 */
public class Stores {
  private List<String> storeIds = new ArrayList<String>();

  public Stores storeIds(List<String> storeIds) {
    this.storeIds = storeIds;
    return this;
  }

  public Stores addStoreIdsItem(String storeIdsItem) {
    this.storeIds.add(storeIdsItem);
    return this;
  }

   /**
   * Get storeIds
   * @return storeIds
  **/
  public List<String> getStoreIds() {
    return storeIds;
  }

  public void setStoreIds(List<String> storeIds) {
    this.storeIds = storeIds;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Stores stores = (Stores) o;
    return Objects.equals(this.storeIds, stores.storeIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(storeIds);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Stores {\n");

    sb.append("    storeIds: ").append(toIndentedString(storeIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

